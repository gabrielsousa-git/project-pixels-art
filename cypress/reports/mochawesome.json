{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-05-30T22:36:14.171Z",
    "end": "2022-05-30T22:37:37.694Z",
    "duration": 83523,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5c9ffbb0-b2fa-427e-9849-e0fe1c0ed51c",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86a88eff-220f-4964-a54c-e29cb74c720d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 1669,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "51553f1d-63b9-44fc-818e-5fc67339cba6",
              "parentUUID": "86a88eff-220f-4964-a54c-e29cb74c720d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51553f1d-63b9-44fc-818e-5fc67339cba6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1669,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "8f3d0bdc-9d9b-4501-855f-d2ee0775d394",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b15ff0e3-edf5-4449-939d-72b531cbaa0e",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "037f834f-87f3-4844-a240-f80ab558038d",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0dba815b-a473-429b-a9a3-d3a933055a82",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "2df82659-2f0f-4a09-a5ce-6b790778fafe",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4e9911aa-93ce-4ab5-a5b9-fedf158ea737",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "a1de9716-7a07-4c24-96d2-a1da4792d722",
              "parentUUID": "914acbcf-c371-4b5e-8d84-4d214d5128a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f3d0bdc-9d9b-4501-855f-d2ee0775d394",
            "b15ff0e3-edf5-4449-939d-72b531cbaa0e",
            "037f834f-87f3-4844-a240-f80ab558038d",
            "0dba815b-a473-429b-a9a3-d3a933055a82",
            "2df82659-2f0f-4a09-a5ce-6b790778fafe",
            "4e9911aa-93ce-4ab5-a5b9-fedf158ea737",
            "a1de9716-7a07-4c24-96d2-a1da4792d722"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f66fb096-a8ed-4a13-9ad9-17a7dca5ae6f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "eaca82eb-2d26-4f18-960e-320ecd6df887",
              "parentUUID": "f66fb096-a8ed-4a13-9ad9-17a7dca5ae6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "0376082f-ae6b-4c81-ac01-b098a8175534",
              "parentUUID": "f66fb096-a8ed-4a13-9ad9-17a7dca5ae6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaca82eb-2d26-4f18-960e-320ecd6df887",
            "0376082f-ae6b-4c81-ac01-b098a8175534"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 339,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73d1ac21-1327-41b5-b767-91fd419585b2",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "21d15ec3-b93a-4575-b337-3918949af386",
              "parentUUID": "73d1ac21-1327-41b5-b767-91fd419585b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "544c2f52-a087-4031-ac42-7fa56ec0f127",
              "parentUUID": "73d1ac21-1327-41b5-b767-91fd419585b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "f1490098-62f3-42c0-86ae-16d7d349685b",
              "parentUUID": "73d1ac21-1327-41b5-b767-91fd419585b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6e9e4196-746b-492d-8df7-b4636d9bfed0",
              "parentUUID": "73d1ac21-1327-41b5-b767-91fd419585b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21d15ec3-b93a-4575-b337-3918949af386",
            "544c2f52-a087-4031-ac42-7fa56ec0f127",
            "f1490098-62f3-42c0-86ae-16d7d349685b",
            "6e9e4196-746b-492d-8df7-b4636d9bfed0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d537639e-2e55-462e-8827-a5a3291c0a94",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "90f99e4f-bc42-439d-be0f-f1327dd7202a",
              "parentUUID": "d537639e-2e55-462e-8827-a5a3291c0a94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "305b6779-c852-4c8d-8d5b-7347223b34a7",
              "parentUUID": "d537639e-2e55-462e-8827-a5a3291c0a94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90f99e4f-bc42-439d-be0f-f1327dd7202a",
            "305b6779-c852-4c8d-8d5b-7347223b34a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 561,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5af326c2-5b04-482e-8550-b9afc3d407de",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "77e8ec1d-58b0-442c-bee8-9518b65c7e5a",
              "parentUUID": "5af326c2-5b04-482e-8550-b9afc3d407de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "a4e0c9ed-71bd-4561-b121-da7e072f2b25",
              "parentUUID": "5af326c2-5b04-482e-8550-b9afc3d407de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77e8ec1d-58b0-442c-bee8-9518b65c7e5a",
            "a4e0c9ed-71bd-4561-b121-da7e072f2b25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 228,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "adfbc526-bd4b-48bd-b2f6-43700cd1afec",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "50568503-03e6-4705-a843-9cefdd039542",
              "parentUUID": "adfbc526-bd4b-48bd-b2f6-43700cd1afec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "af44a00a-a850-4071-9b88-5d21e8db6cad",
              "parentUUID": "adfbc526-bd4b-48bd-b2f6-43700cd1afec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50568503-03e6-4705-a843-9cefdd039542",
            "af44a00a-a850-4071-9b88-5d21e8db6cad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "35fe7226-9fc2-430a-8cad-7788e4e25782",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0a5d669f-37b1-4e26-a67c-2866541be8d7",
              "parentUUID": "35fe7226-9fc2-430a-8cad-7788e4e25782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "b553c4a1-c69d-4eb0-98f6-08f35a7f9097",
              "parentUUID": "35fe7226-9fc2-430a-8cad-7788e4e25782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "52203974-180e-4c80-97d2-6ad97d815f5f",
              "parentUUID": "35fe7226-9fc2-430a-8cad-7788e4e25782",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a5d669f-37b1-4e26-a67c-2866541be8d7",
            "b553c4a1-c69d-4eb0-98f6-08f35a7f9097",
            "52203974-180e-4c80-97d2-6ad97d815f5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12079,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37b44556-c2b1-4bf3-907f-500e91651a75",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "cd13a105-df70-42d6-835a-71f0bf8a6534",
              "parentUUID": "37b44556-c2b1-4bf3-907f-500e91651a75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "2469908c-ed67-4c3b-b441-bfb81ac94fc2",
              "parentUUID": "37b44556-c2b1-4bf3-907f-500e91651a75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 88,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "0e1ccd43-580b-4d29-9c21-740b760b14b1",
              "parentUUID": "37b44556-c2b1-4bf3-907f-500e91651a75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "44986bf3-d3ce-40c1-bd9a-277aeee71277",
              "parentUUID": "37b44556-c2b1-4bf3-907f-500e91651a75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd13a105-df70-42d6-835a-71f0bf8a6534",
            "2469908c-ed67-4c3b-b441-bfb81ac94fc2",
            "0e1ccd43-580b-4d29-9c21-740b760b14b1",
            "44986bf3-d3ce-40c1-bd9a-277aeee71277"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2792,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "de842a98-8803-40ed-8472-b4bcdfe74e3b",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4323,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1abdc730-530c-419c-98cf-9eb0a8549fa4",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4424,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "10c3d86a-fd5f-4586-8984-a5ead79ba955",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4383,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9c2aa410-d362-41ad-b955-120d12c64501",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4386,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a21b5967-394d-4335-8ed9-01487c1e1206",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4506,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9d63595d-169a-4bf8-9429-a4fb27bb16a7",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "36382173-4524-497e-ae64-7cd89e8d3746",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4414,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8dc0de5b-414e-4952-9a86-4651e1d40088",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "06984fc0-832a-4e9f-81e1-386886aaaded",
              "parentUUID": "b8a90ff3-9e02-490b-9aab-9669f816ce53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "de842a98-8803-40ed-8472-b4bcdfe74e3b",
            "1abdc730-530c-419c-98cf-9eb0a8549fa4",
            "10c3d86a-fd5f-4586-8984-a5ead79ba955",
            "9c2aa410-d362-41ad-b955-120d12c64501",
            "a21b5967-394d-4335-8ed9-01487c1e1206",
            "9d63595d-169a-4bf8-9429-a4fb27bb16a7",
            "36382173-4524-497e-ae64-7cd89e8d3746",
            "8dc0de5b-414e-4952-9a86-4651e1d40088",
            "06984fc0-832a-4e9f-81e1-386886aaaded"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39705,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "247eaf37-4083-491f-b0b0-b5c3501aa907",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4373,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ef876405-9636-41eb-b2d3-170c0fbb5242",
              "parentUUID": "247eaf37-4083-491f-b0b0-b5c3501aa907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4415,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1d60d0b5-25a2-43bd-8e6d-4922adba682f",
              "parentUUID": "247eaf37-4083-491f-b0b0-b5c3501aa907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4423,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:34549/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:34549/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:34549/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:34549/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:34549/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:34549/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "371a9169-f360-4a37-a71e-dca3b2787654",
              "parentUUID": "247eaf37-4083-491f-b0b0-b5c3501aa907",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ef876405-9636-41eb-b2d3-170c0fbb5242",
            "1d60d0b5-25a2-43bd-8e6d-4922adba682f",
            "371a9169-f360-4a37-a71e-dca3b2787654"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "221f09a1-3097-41f5-94be-61183092b2a3",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 554,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34549/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34549/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34549/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34549/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34549/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34549/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34549/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c923b65d-f3d1-4f4d-ad00-d30375c73076",
              "parentUUID": "221f09a1-3097-41f5-94be-61183092b2a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 523,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:34549/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:34549/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:34549/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:34549/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:34549/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:34549/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:34549/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34549/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:34549/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:34549/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:34549/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:34549/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "57fe569e-f9a3-453a-a5b2-03baa5eb11f9",
              "parentUUID": "221f09a1-3097-41f5-94be-61183092b2a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c923b65d-f3d1-4f4d-ad00-d30375c73076",
            "57fe569e-f9a3-453a-a5b2-03baa5eb11f9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}